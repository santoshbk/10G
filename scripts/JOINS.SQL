/* 
JOINS
----------
  > TO SELECT DATA FROM MULTIPLE TABLES
  
  oRACLE PROP. SYNTAX                         =>  SQL-99 SYNTAX
  ==========================================================================
  > EQUI                                        > INNER JOIN
  > OUTER                                       > OUTER(LEFT, RIGHT, FULL)
  > NON EQUI                                    > JOIN
  > CARTESIAN                                   > CROSS JOIN
  > SELF                                        > JOIN (SAME TABLE)
                                                > NATURAL   
                                                > USING
RULES:
-------------------------------------------
 > COLUMNS SHOULD HAVE THE FORMAT
    E.ENAME OR EMP.ENAME
 > TYPE OF JOIN SHOULD BE SPECIFIED
 > JOIN CONDITION USES ON CLAUSE
 
 EQUI(INNER) JOIN:
 ----------------------
 > JOIN CONDITION USES = OPERATOR
 > TABLES HAVING REFERENTIAL INTEGRITY -> PARENT CHILD RELATION
 > WORKS LIKE ITERSECTS - COMMON TO BOTH TABLES
 
 OUTER JOINS: = INNER JOIN + MISSING DATA
 ----------------------------------------
  LEFT = INNER JOIN + MISSING DATA FROM LEFT TABLE
  RIGHT = INNER JOIN + MISSING DATA FROM RIGHT TABLE
  FULL = MISSING DATA IN BOTH TABLE
  
  NON EQUI JOIN
  --------------------------
  > USES OTHER THAN = OPERATOR
  
  SELF JOIN:
  ----------------
  > TABLE JOINS WITH ITSELF
  
*/

-- DISPLAY DNAME FOR EACH ENAME
SELECT E.ENAME, D.DNAME
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
ORDER BY D.DNAME;

SELECT SUM(SAL), D.DNAME
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
GROUP BY D.DNAME
ORDER BY 1;

-- FIND EMP WORKING IN CHICAGO AS CLERK
SELECT * FROM DEPT;

SELECT E.ENAME, D.LOC, E.JOB
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
AND D.LOC = 'CHICAGO'
AND E.JOB='CLERK';

SELECT E.ENAME, D.LOC, E.JOB
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
WHERE D.LOC = 'CHICAGO'
AND E.JOB='CLERK';

-- DISPLAY ENAME, DNAME ALONG WITH DNAME WHERE NO EMP ARE WORKING
SELECT E.ENAME, D.DNAME
FROM EMP E RIGHT OUTER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
ORDER BY 1;

INSERT INTO EMP(EMPNO, ENAME) VALUES(6666,'XYZ');
COMMIT;
SELECT E.ENAME, D.DNAME
FROM EMP E LEFT OUTER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO
ORDER BY 1;

SELECT E.ENAME, D.DNAME
FROM EMP E FULL OUTER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

select * FROM SALGRADE;

-- FIND GRADE FOR EACH EMPLOYEE
SELECT E.ENAME, E.SAL, S.GRADE, S.LOSAL, S.HISAL
FROM EMP E JOIN SALGRADE S
ON E.SAL
BETWEEN S.LOSAL
AND S.HISAL;

-- CROSS JOIN
SELECT E.ENAME, D.DNAME
FROM EMP E CROSS JOIN DEPT D;

SELECT E.ENAME, E.SAL, D.DNAME, E.JOB
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO=D.DEPTNO
AND E.SAL>950
AND E.JOB = 'CLERK'
AND D.DNAME='RESEARCH';

--SELF JOIN
SELECT E.ENAME "EMP", M.ENAME "MANAGER"
FROM EMP E JOIN EMP M
ON E.MGR=M.EMPNO;

-- FIND OUT EMP WHO ARE TAKING SAME SALARIES
SELECT E.ENAME "ENAME", E.SAL "ESAL", S.ENAME "MNAME", S.SAL "MSAL"
FROM EMP E JOIN EMP S
ON E.SAL = S.SAL
AND E.ENAME<>S.ENAME;

-- FIND EMP WHO ARE TAKING MORE SALR THAN THEIR MANAGER
SELECT E.ENAME "ENAME", E.SAL "ESAL", S.ENAME "MNAME", S.SAL "MSAL"
FROM EMP E JOIN EMP S
ON E.MGR = S.EMPNO
AND E.SAL > S.SAL;

-- FIND NO OF EMP REPORTING TO KING
SELECT E.ENAME, M.ENAME
FROM EMP E JOIN EMP M
ON E.MGR = M.EMPNO
AND M.ENAME='KING';

SELECT COUNT(*), M.ENAME
FROM EMP E JOIN EMP M
ON E.MGR = M.EMPNO
AND M.ENAME='KING'
GROUP BY M.ENAME;

-- NATURAL
SELECT ENAME, DNAME
FROM EMP NATURAL JOIN DEPT;

--USING
SELECT ENAME, DNAME
FROM EMP JOIN DEPT
USING (DEPTNO);

-- JOIN THREE TABLES
SELECT E.ENAME, D.DNAME,S.GRADE
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO=D.DEPTNO
--AND E.JOB='CLERK'
JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL;
